{"version":3,"file":"static/js/856.54d2c68f.chunk.js","mappings":"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","sources":["components/costs/itemCosts.tsx","components/costs/listCosts.tsx","pages/costs.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {CostsInterface} from \"../contracts/userInterface\";\nimport {Link, useLocation} from \"react-router-dom\";\nimport callApi from \"../../helpers/callApi\";\nimport {toast} from \"react-toastify\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {deleteCost, setCosts} from \"../../store/costs\";\nimport {Button, Modal} from \"react-bootstrap\";\n\nimport jalaliMoment from 'jalali-moment'\nimport {RootState} from \"../../store\";\n\ninterface PropsInterface {\n    data: CostsInterface\n}\n\nconst ItemCosts = ({data}: PropsInterface) => {\n    const dispatch = useDispatch()\n    const location = useLocation()\n    const user = useSelector((store: RootState) => store.user.user);\n\n    const [show, setShow] = useState<boolean>(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    let deleteHandler = async () => {\n        let res = await callApi().delete(`/configs/${data.id}`);\n\n        try {\n            dispatch(deleteCost(data.id))\n            callApi().get(`/configs${location?.search}`).then(response => dispatch(setCosts(response.data.result)))\n            toast.success(\"حذف با موفقیت انجام شد\", {\n                position: \"bottom-right\",\n                autoClose: 2000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: \"light\",\n            });\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const copyHandler = () => {\n        // @ts-ignore\n        navigator.clipboard.writeText(data.url);\n        toast.success(\"کپی با موفقیت انجام شد.\", {\n            position: \"bottom-right\",\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n        });\n    };\n\n    return (\n        <>\n            <tr className=\"cost-row tr-border-color border\">\n                <td>\n                </td>\n                <td>{data.id}</td>\n                {/*@ts-ignore*/}\n                <td>{data.name}</td>\n                {/*@ts-ignore*/}\n                {user?.is_admin && <td className=\"text-nowrap\">{data.user.name}</td>}\n\n                <td className=\"text-nowrap\">{jalaliMoment(data.created_at).format('jYYYY/jM/jD')}</td>\n                {/*@ts-ignore*/}\n                <td className=\"text-nowrap\">{data.token}</td>\n                <td className=\"text-center text-nowrap\">\n                    <button onClick={copyHandler} className=\"btn btn-alt-success cost-delete-btn ml-1\">کپی آدرس کانفیگ\n                    </button>\n                    {\n                        // @ts-ignore\n                        user?.is_admin &&\n                        <>\n                            <Link to={`/costs/${data.id}`} className=\"btn btn-alt-warning ml-1\">ویرایش</Link>\n                            <button onClick={handleShow} className=\"btn btn-alt-danger cost-delete-btn\">حذف</button>\n                        </>\n                    }\n                </td>\n            </tr>\n\n            {/*Modal*/}\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header>\n                    <Modal.Title>آیا مطمئن هستید؟</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>بعد از حذف کاربر دیگر قادر به بازیابی نخواهید بود!</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        انصراف\n                    </Button>\n                    <Button variant=\"danger\" onClick={deleteHandler}>\n                        بله حذف شود\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default ItemCosts;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, NavLink, useLocation, useNavigate } from \"react-router-dom\";\n\nimport ItemCosts from \"./itemCosts\";\nimport { Cutting } from \"../../helpers/cutting\";\nimport { RootState } from \"../../store\";\nimport callApi from \"../../helpers/callApi\";\nimport { setCosts } from \"../../store/costs\";\n\nconst ListCosts = () => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    let location = useLocation();\n\n    const [search, setSearch] = useState('');\n\n    const user = useSelector((store: RootState) => store.user.user);\n    let costs = useSelector((state: RootState) => state.costs.costs);\n\n\n    useEffect(() => {\n        const fetchDataAndDispatch = () => {\n            callApi().get(`/configs${location?.search}`).then(res => dispatch(setCosts(res.data.result)));\n        }\n\n        navigate(`/?query=${search}`);\n        // Set up interval to fetch data every 500 seconds\n        const intervalId = setTimeout(() => {\n            fetchDataAndDispatch();\n        }, 500); // 500 seconds in milliseconds\n\n        return () => clearInterval(intervalId);\n    }, [search])\n    return (\n        <div>\n            <div className=\"row js-appear-enabled animated fadeIn\" data-toggle=\"appear\">\n                {/* Row #3 */}\n                <div className=\"col-md-12\">\n                    <div className=\"block block-rounded block-bordered\">\n                        <div className=\"block-header block-header-default border-b justify-content-between\">\n                            <h3 className=\"block-title\">لیست کاربران</h3>\n                            <div>\n                                <input className=\"px-1\" value={search} onChange={(e) => setSearch(e.target.value)} placeholder=\"جستجوی کاربر\" />\n                            </div>\n                        </div>\n                        <div className=\"block-content\">\n                            <div className=\"table-responsive\">\n                                <table className=\"table table-borderless\">\n                                    <thead>\n                                        <tr>\n                                            <th />\n                                            <th>#</th>\n                                            <th>نام کاربر</th>\n                                             {/*@ts-ignore*/}\n                                            {user?.is_admin && <th>مدیر اضافه کننده</th>}\n                                            <th>تاریخ</th>\n                                            <th>توکن</th>\n                                            <th className=\"text-center\">عملیات</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            costs?.data?.map((item) => (\n                                                <ItemCosts key={item.id} data={item} />\n                                            ))\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            <nav>\n                                <ul className=\"pagination\">\n                                    <li className=\"page-item disabled\" aria-disabled=\"true\" aria-label=\"« قبلی\">\n                                        <Link className=\"page-link\" to={{\n                                            pathname: `/`,\n                                            search: costs?.links?.prev ? Cutting(costs?.links?.prev, 'page=') : ''\n                                        }} rel=\"next\" aria-label=\"بعدی »\">‹</Link>\n                                    </li>\n                                    {\n                                        costs?.meta.links.map((item, index) => {\n                                            return index != 0 && index + 1 != costs?.meta.links.length &&\n                                                <li className={`page-item ${item.active ? 'active' : ''}`}\n                                                    key={index}>\n                                                    <NavLink to={{\n                                                        pathname: `/`,\n                                                        search: item.url ? Cutting(item.url, '?') : ''\n                                                    }} className=\"page-link\">{item.label}</NavLink>\n                                                </li>\n                                        }\n                                        )\n                                    }\n                                    <li className=\"page-item\">\n                                        <Link className=\"page-link\" to={{\n                                            pathname: `/`,\n                                            search: costs?.links?.next ? Cutting(costs?.links?.next, 'page=') : ''\n                                        }}>›</Link>\n                                    </li>\n                                </ul>\n                            </nav>\n                        </div>\n                    </div>\n                </div>\n                {/* END Row #3 */}\n            </div>\n        </div>\n    );\n};\n\nexport default ListCosts;\n","import React from 'react';\n\nimport ListCosts from \"../components/costs/listCosts\";\n\nconst Costs = () => {\n    return (\n        <div>\n            <div className='content'>\n                {/*<CostFilter/>*/}\n                <ListCosts/>\n            </div>\n        </div>\n    );\n};\n\nexport default Costs;\n"],"names":["data","dispatch","useDispatch","location","useLocation","user","useSelector","store","useState","show","setShow","handleClose","deleteHandler","callApi","delete","id","deleteCost","get","search","then","response","setCosts","result","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","err","console","log","className","name","is_admin","jalaliMoment","created_at","format","token","onClick","navigator","clipboard","writeText","url","to","Modal","onHide","Button","variant","navigate","useNavigate","setSearch","costs","state","useEffect","intervalId","setTimeout","res","clearInterval","value","onChange","e","target","placeholder","map","item","pathname","links","prev","Cutting","rel","meta","index","length","active","label","next"],"sourceRoot":""}