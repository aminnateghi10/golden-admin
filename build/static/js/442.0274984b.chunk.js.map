{"version":3,"file":"static/js/442.0274984b.chunk.js","mappings":"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","sources":["components/user-panel/userDropdown.tsx","components/user-panel/header.tsx","components/user-panel/footer.tsx","components/user-panel/sidebar.tsx","components/Layout/userPanelLayout.tsx","components/user-panel/pageLoader.tsx","helpers/auth.ts","helpers/useAuth.ts"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport {logoutToken} from \"../../helpers/auth\";\nimport {Link, useNavigate, useLocation} from \"react-router-dom\";\nimport callApi from \"../../helpers/callApi\";\n\nconst UserDropdown = () => {\n    let navigator = useNavigate();\n    let location = useLocation();\n    const dropdownRef = useRef(null);\n\n    const [show, setShow] = useState<boolean>(false)\n    let logOutHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        callApi().get('/logout').then(res => {\n            logoutToken();\n            navigator('/auth/login');\n        })\n    }\n\n    useEffect(() => {\n        setShow(false);\n    }, [location]);\n\n    const handleOutsideClick = (e: MouseEvent) => {\n        // Check if the click is outside the dropdown\n        // @ts-ignore\n        if (dropdownRef.current && !dropdownRef.current.contains(e.target as Node)) {\n            setShow(false);\n        }\n    };\n\n    useEffect(() => {\n        // Attach the event listener when the component mounts\n        document.addEventListener(\"click\", handleOutsideClick);\n\n        // Detach the event listener when the component is unmounted\n        return () => {\n            document.removeEventListener(\"click\", handleOutsideClick);\n        };\n    }, []);\n\n\n    return (\n        <div className={`btn-group ${show ? 'show' : ''}`} ref={dropdownRef}>\n            <button type=\"button\" onClick={(e) => setShow(!show)} className=\"btn btn-rounded btn-dual-secondary\"\n                    id=\"page-header-user-dropdown\">\n                امین ناطقی<i className=\"fa fa-angle-down mr-5\"/>\n            </button>\n            <div className={`dropdown-menu text-right min-width-150 ${show ? 'show' : ''}`}\n                 aria-labelledby=\"page-header-user-dropdown\">\n                <Link to='/' className=\"dropdown-item\"><i className=\"si si-user ml-5\"/>لیست کاربران</Link>\n                <Link to='change-password' className=\"dropdown-item\"><i className=\"si si-pencil ml-5\"/>تغییر\n                    گذرواژه</Link>\n                <div className=\"dropdown-divider\"/>\n                <button onClick={logOutHandler} className=\"dropdown-item\"><i className=\"si si-logout ml-5\"/>خروج\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default UserDropdown;\n","import React, {Dispatch, SetStateAction , memo} from \"react\";\nimport UserDropdown from \"./userDropdown\";\n\ninterface PropsInterface {\n    sidebarShow: Dispatch<SetStateAction<boolean>>,\n    statusSidebarShow: boolean\n}\n\nconst Header = ({sidebarShow, statusSidebarShow}: PropsInterface) => {\n    const sidebarShowHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        sidebarShow(!statusSidebarShow)\n    }\n\n    return (\n        <header id=\"page-header\">\n            {/* Header Content */}\n            <div className=\"content-header\">\n                {/* Right Section */}\n                <div className=\"content-header-section\">\n                    {/* Toggle Sidebar */}\n                    {/* Layout API, functionality initialized in Codebase() -> uiApiLayout() */}\n                    <button type=\"button\" className=\"btn btn-circle btn-dual-secondary\" onClick={sidebarShowHandler}>\n                        <i className=\"fa fa-navicon\"/>\n                    </button>\n                    {/* END Toggle Sidebar */}\n                </div>\n                {/* END Right Section */}\n                {/* Left Section */}\n                <div className=\"content-header-section\">\n                    <UserDropdown/>\n                </div>\n                {/* END Left Section */}\n            </div>\n            {/* END Header Content */}\n        </header>\n    )\n}\nexport default memo(Header);\n","import React from \"react\";\n\nconst Footer = () => {\n    return (\n        <footer id=\"page-footer\" className=\"opacity-0\">\n            <div className=\"content py-20 font-size-xs clearfix\">\n                <div className=\"float-right\">\n                    تمامی حقوق محفوظ می باشد\n                </div>\n                <div className=\"float-left\">\n                    توسعه یافته با <i className=\"fa fa-heart text-pulse\"/>\n                    توسط <a className=\"font-w600\" href=\"http://t-nateghi.ir/\">ناطقی</a>\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","import React, { Dispatch, SetStateAction, memo, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { RootState } from \"../../store\";\n\ninterface PropsInterface {\n  sidebarShow: Dispatch<SetStateAction<boolean>>;\n}\n\nconst Sidebar = ({ sidebarShow }: PropsInterface) => {\n\n  const user = useSelector((store: RootState) => store.user.user);\n  const sideNavigation = [\n    // {href:'/' , icon:'si si-cup',label:'داشبورد'},\n    { href: \"/\", icon: \"si si-users\", label: \"لیست کاربران\", },\n    { href: \"/create-costs\", icon: \"si si-user\", label: \"افزودن کاربر\" },\n    {\n      href: \"/create-payments\",\n      icon: \"si si-credit-card\",\n      label: \"ثبت پرداختی\",\n      isAdmin: true\n    },\n    { href: \"/payments\", icon: \"si si-book-open\", label: \"لیست پرداختی\", isAdmin: true },\n    { href: \"/create-domains\", icon: \"si si-plus\", label: \"ثبت دامین\", isAdmin: true },\n    { href: \"/domains\", icon: \"si si-list\", label: \"لیست دامین ها\", isAdmin: true },\n    {\n      href: \"/add-user\",\n      icon: \"si si-user-follow\",\n      label: \"افزودن مدیر\",\n      isAdmin: true\n    },\n    { href: \"/users\", icon: \"si si-users\", label: \"لیست مدیران\", isAdmin: true },\n  ];\n\n  return (\n    <nav id=\"sidebar\">\n      {/* Sidebar Scroll Container */}\n      <div className=\"slimScrollDiv\">\n        <div id=\"sidebar-scroll\">\n          {/* Sidebar Content */}\n          <div className=\"sidebar-content\">\n            {/* Side Header */}\n            <div className=\"content-header content-header-fullrow px-15\">\n              {/* Normal Mode */}\n              <div className=\"content-header-section text-center align-parent sidebar-mini-hidden\">\n                {/* Close Sidebar, Visible only on mobile screens */}\n                {/* Layout API, functionality initialized in Codebase() -> uiApiLayout() */}\n                <button\n                  onClick={() => sidebarShow(false)}\n                  type=\"button\"\n                  className=\"btn btn-circle btn-dual-secondary d-lg-none align-v-l\"\n                  data-toggle=\"layout\"\n                  data-action=\"sidebar_close\"\n                >\n                  <i className=\"fa fa-times text-danger\" />\n                </button>\n                {/* END Close Sidebar */}\n                {/* Logo */}\n                <div className=\"content-header-item\">\n                  <Link className=\"link-effect font-w700\" to=\"/\">\n                    <span className=\"text-dual-primary-dark\">\n                      مدیریت کاربران\n                    </span>\n                  </Link>\n                </div>\n                {/* END Logo */}\n              </div>\n              {/* END Normal Mode */}\n            </div>\n            {/* END Side Header */}\n            {/* Side Navigation */}\n            <div className=\"content-side content-side-full\">\n              <ul className=\"nav-main\">\n                {sideNavigation?.map((item) => {\n                      // @ts-ignore\n                  if (user.is_admin) {\n                    return <li key={item.href}>\n                      <NavLink to={item.href}>\n                        <i className={item.icon} />\n                        <span className=\"sidebar-mini-hide\">{item.label}</span>\n                      </NavLink>\n                    </li>\n                  }else{\n                    if(!item.isAdmin){\n                      return <li key={item.href}>\n                      <NavLink to={item.href}>\n                        <i className={item.icon} />\n                        <span className=\"sidebar-mini-hide\">{item.label}</span>\n                      </NavLink>\n                    </li>\n                    }\n                  }\n                }\n                )}\n              </ul>\n            </div>\n            {/* END Side Navigation */}\n          </div>\n          {/* Sidebar Content */}\n        </div>\n        <div className=\"slimScrollBar\" />\n        <div className=\"slimScrollRail\" />\n      </div>\n      {/* END Sidebar Scroll Container */}\n    </nav>\n  );\n};\n\nexport default memo(Sidebar);\n","import {useDispatch} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {Outlet, Navigate, useLocation } from \"react-router-dom\"\n\nimport {setUser} from \"../../store/user\";\nimport Header from \"../user-panel/header\";\nimport Footer from \"../user-panel/footer\";\nimport Sidebar from \"../user-panel/sidebar\";\nimport useAuth from \"../../helpers/useAuth\";\nimport PageLoader from \"../user-panel/pageLoader\";\n\nconst UserPanelLayout = () => {\n\n    let innerWidth=window.innerWidth;\n    const {pathname} = useLocation();\n    const dispatch = useDispatch();\n    const [show, setShow] = useState<boolean>(false);\n    const {user, error, loading} = useAuth('userPanel');\n\n\n    useEffect(() => {\n        if (innerWidth < 992) {\n            setShow(false)\n        } else {\n            setShow(true)\n        }\n    }, [innerWidth])\n\n    useEffect(() => {\n        if (innerWidth < 992) {\n            setShow(false)\n        } else {\n            setShow(true)\n        }\n    }, [pathname])\n\n    if (loading) return <PageLoader/>\n    if (error) return <Navigate to='/auth/login'/>\n    if (user) dispatch(setUser(user?.data?.result))\n    if (user) return (\n        <div>\n            <div id=\"page-container\"\n                 className={`${show ? \"sidebar-o sidebar-r side-scroll page-header-modern main-content-boxed side-trans-enabled sidebar-o-xs\"\n                     : 'sidebar-r side-scroll page-header-modern main-content-boxed side-trans-enabled'}`}>\n                <Sidebar sidebarShow={setShow}/>\n                <Header sidebarShow={setShow} statusSidebarShow={show}/>\n                <main id='main-container'>\n                    {/*Show pages*/}\n                    <Outlet/>\n                </main>\n                <Footer/>\n            </div>\n        </div>\n    );\n\n    return <></>;\n}\n\nexport default UserPanelLayout;\n","import React from \"react\";\n\nconst PageLoader = () => {\n  return(\n      <div id=\"page-loader\" className=\"hide\" />\n  )\n}\n\nexport default PageLoader;","import Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\nconst loginToken= (token:string)=>{\n    console.log(token)\n    cookies.set('token' ,`Bearer ${token}`,{\n        maxAge:60 * 60 * 24 * 10,\n        path:'/'\n    })\n}\n\nconst logoutToken= ()=>{\n    console.log('aaa343433')\n    cookies.remove('token')\n}\n\nexport {loginToken,logoutToken};","import useSWR from \"swr\";\n\nimport callApi from \"./callApi\";\n\nconst useAuth = (key : string) => {\n    const { data, error, isLoading } = useSWR(key, () => {\n        return callApi().get('/user')\n    },{ shouldRetryOnError:false })\n    return {user: data, error, loading: isLoading}\n}\n\nexport default useAuth;\n"],"names":["navigator","useNavigate","location","useLocation","dropdownRef","useRef","useState","show","setShow","useEffect","handleOutsideClick","e","current","contains","target","document","addEventListener","removeEventListener","className","ref","type","onClick","id","to","preventDefault","callApi","get","then","res","logoutToken","Header","sidebarShow","statusSidebarShow","memo","href","Sidebar","user","useSelector","store","sideNavigation","icon","label","isAdmin","map","item","is_admin","innerWidth","window","pathname","dispatch","useDispatch","useAuth","error","loading","setUser","data","result","cookies","Cookies","loginToken","token","console","log","set","maxAge","path","remove","key","useSWR","shouldRetryOnError","isLoading"],"sourceRoot":""}